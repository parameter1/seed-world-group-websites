import moment from "moment-timezone";
import { getAsObject } from "@parameter1/base-cms-object-path";
import defaultValue from "@parameter1/base-cms-marko-core/utils/default-value";

$ const config = getAsObject(out.global, "markoCoreDate");

$ const { obj, blockName } = input;

$ const format = defaultValue(input.format, "MMM D, YYYY");
$ const timezone = defaultValue(input.timezone, config.timezone || "America/Chicago");
$ const locale = defaultValue(input.locale, config.locale);
$ if (locale) moment.locale(locale);

$ const publishedDate = defaultValue(obj.published, null, v => moment(v).tz(timezone));
$ const updatedDate = defaultValue(obj.updated, null, v => moment(v).tz(timezone));
$ const displayUpdatedDate = defaultValue(input.displayUpdatedDate, true);

<marko-web-obj-date|{ value }|
  type="content"
  block-name=blockName
  obj=obj
  field="published"
  format=format
  locale=locale
>
  <if(input.publishedPrefix)>
    ${input.publishedPrefix} ${value}
  </if>
  <else>
    ${value}
  </else>
</marko-web-obj-date>
<if(updatedDate && updatedDate.isAfter(publishedDate, "day") && displayUpdatedDate)>
  <marko-web-obj-date|{ value }|
    type="content"
    block-name=blockName
    obj=obj
    field="updated"
    format=format
    locale=locale
  >
    Updated ${value}
  </marko-web-obj-date>
</if>
